# CSS or Cascading Style Sheets
  - The language used to style the frontend of any website.
  - CSS is a cornerstone techology of the World Wide Web, alongside HTML and JavaScript.

# Into
  - CSS --> Cascading Style Sheets
  - CSS describes how HTML elements are to be displayed on screen, paper, or in other media
  - CSS saves a lot of work. it can control the layout of multiple web pages all at once
  - External stylesheets are stored in CSS files.

# CSS Solved
  - HTML was NEVER intented to contain tags for formatting a web page!
  - HTML was created to describe the content on a web page
    |- headings tags
    |- pagragraph tags

# CSS Selectors
  - used to "find" (or select) the HTML elements you want to style.

  1. #id
    - selects the element with id="firstname"
  2. .class
    - selects all elements with class="intro"
  3. element.class
    - selects only the elements with class
  4. *
    - selects all elements
  5. element, element...
    - selects all elements and all elements under it

# Cascading Order
  - Rules --> from highest to lowest priority
    1. Inline Style (inside an HTML element)
    2. External and internal sheets (in the head section)
    3. Browser default

# Comments
  - /* */

# Colors
  - specified using predefined color name, or RGB, HEX, HSL, RGBA, HSLA values
  - you can set background color, text color, border color.

  1. RGB
    - red, green, blue
  2. RGBA
    - red, green, blue, alpha(opacity)
  3. HEX
    - 3 - 6 digits hex codes (#ff00ff)
  4. HSL
    - hue, saturation, and lightness
      + Saturation --> intensity of a color
      + 100% is pure color, no shades of gray
      + 50% is 50% gray (still be able to see the color)
      + 0% is completely gray (no longer see the color)
    - Lightness
      + lightness of a color can be described as how much light you want to give the color, where 0% means no light (black), 50% mean 50% light (neither dark nor light), 100% means full light (white).

# Backgrounds
  - used to add background effects for elements
    + background-color
    + background-image
      |- specifies an image to use as the background of an element
      |- background-image: url("paper.gif");
    + background-repeat
      |- default, repeats an image both horizontally and vertically
      |- repeat-x --> horizontally
      |- repeat-y --> vertically
      |- no-repeat
    + background-attachment
      |- specifies whether the backgroundimage should scroll or be fixed(will not scroll the rest of the page)
    + background-position
      |- specify the position of the background image
      |- background-position: right top;
    + background (shorthand property)
      |- order:
        1. color
        2. image
        3. repeat
        4. attachment
        5. position
      |- it does not matter if one of the propety value is missing, as long as the other ones are in this order.
      |- do not use the background-attachment property, it does not have a value

  - Summary:
    + background
      |- sets all the background properties in one declation
    + background-attachment
      |- sets whter a background image is fixed or scrolls with the rest of the page
    + background-clip
      |- specifies the painting area of the backgroun
    + background-color
      |- sets the background color of an element
    + background-image
      |- sets the background image for an element
    + background-origin
      |- specifies where the background image is positioned
    + background-position
      |- sets the starting position of a background image
    + background-repeat
      |- sets how a background image will be repeated
    + background-size
      |- specifies the size of the background image

# Border
  - allow you to specify the style, width, and color of an element's border.
  1. Border-style
    - dotted
    - dashed
    - solid
    - double
    - groove
    - ridge
    - inset
    - outset
    - none
    - hidden
  2. Shorthand
    - border
    - can specifies individual border properties for just one side
      + border-left
      + border-right
      + border-top
      + border-bottom
    - Order:
      + border-width
      + border-style (required)
      + border-color
  3. Border-Radius
    - used to add rounded borders to an element

# Margins
  - used to create space around elements, outside of any defined borders.
  - ouside of any defined borders (top, bottom, right, left)
  1. shorthand
    - Order:
      + margin-top
      + margin-right
      + margin-bottom
      + margin-left
  - Auto Value
      + you can set the margin propety to "auto" to horizontally center the element within its container.
      + the element will then take up the specified width, and the remaining space will be split equally between the left and right margins.
  - Inherit Value
      + inherit from the parent element
  - Only top and bottom margin collapse

# Padding
  - used to create space around an element's content, inside of any defined borders.
  1. Shorthand
    - Order:
      + top/bottom left/right
      + padding-top
      + padding-right
      + padding-bottom
      + padding-left
    - length --> specifies a padding in px, pt, cm, etc.
    - % --> specifes a padding in % of the width of the containing element
    - inherit --> specifies that the padding should be inherited from the parent element
    - NEGATIVE VALUE ARE NOT AOLLOWED
  - Padding and Element Width
      + specifies the width of the element's content area. The content area is the portion inside the padding, border, and margin of an element (box model)
      + if an element has a specified width, the padding added to that element will be added to the total width of the element. This is often an undesirable result.

# Heigh, Width and Max-width
  - height and width properties are used to set the height and width of an element.
  - max-width property is used to set the maximum width of an element.

  1. Height and Width
    - does not include padding, borders, or margins.
    - sets the height/width of the area inside the padding, border, and margin of the element.
    - Values:
      + auto --> default. the browser calculates the height and width
      + length --> defines the height/width in px, cm, etc.
      + % --> defines the height/width in percent of the containing block
      + initial --> sets the height/width to its default value
      + inherit --> the height/width will be inherited from its parent value.
  2. Setting Max-Width
    - used to set the maximum width of an element.
      + specified in length values, like px, cm, etc., or in percent of the containing block, or set to none (this is default === no maximum width)
    - The Problem with Div
      + browser window is smaller than width of the element (500px). The browser then adds a horizontal scrollbar to the page.
      + using max-width, will improve the browser's handling of small windows.

# Box Model
  - box that wrap arounds every HTML element. it consists of
    + margins, borders, padding, and the actual content.
  - Order from ouside to inside:
    + Margin --> The content of the box, where text and images appear
    + Border --> Clears an area around the content. The padding is transparent
    + Padding --> A border that goes around the padding and content
    + Content --> Clears an area outside the border. the margin is transparent
  - Box model allows us to add a border around elements, and to define space between elements.

  - Width and Height of an Element
    + Important:
      |- When you set the width and height properties of an element with CSS, you just set the width and height of the "content area". To calculate the full size of an element, you must also add padding, borders and margins.

  - Total Width Calculation
    + Total element width = width + left padding + right padding + left border + right border + left margin + right margin
  - Total Height Calulation
    + Total element height = height + top padding + bottom padding + top border + bottom border + top margin + bottom margin


