# Basics
  > to get started you have to define a container element as a grid
    |- display: grid;
  > set the column and row sizes with
    |- grid-template-columns
    |- grid-template-rows
  > then place its child elements into the grid
    |- grid-column
    |- grid-row

  > similarly to flexbox, the source order of the grids items doesnt matter. make it easier for media queries

# Terminology
  > Grid Container
    |- the element on which "display: grid;" is applied. Its direct parent of all the grid items
  > Grid Line
    |- the dividing lines that make up structure of the grid.
    |- they can be either vertical ("column grid lines") or horizontal ("row grid lines") and reside on either side of a row or column.
  > Grid Track
    |- the space between two adjacent grid lines
    |- you can think them as columns or rows of the grid.
  > Grid Area
    |- the total space surrounded by four grid lines
    |- a grid area may be composed of any number of grid cells.
  > Grid Item
    |- the children (direct descendants) of the grid container.
  > Grid Cell
    |- the space between two adjacent row and two adjacent column grid lines.
    |- its a single "unit" of the grid.

# Properties of Grid Container (Parent)
  > display
    |- defines the element as a grid container and establishes a new grid formatting context for its contents
    |- Values:
      + grid
        - generates a block-level grid
      + inline-grid
        - generates an inline-level grid
  > grid-template-columns || grid-template-rows
    |- defines the columns and rows of the grid with a space-separated list of values
    |- the values represent the track size, and the space between them represents the grid line.
    |- Values:
      + <track-size>
        - can be a length, percentage, or a fraction of the free space in the grid (using "fr" unit)
      + <line-name>
        - an arbirary name of your choosing

    |- grid lines are automatically assigned positive numbers from these assignments (-1 being an alternate for the very last row)
  > grid-template-areas
  > grid-template
  > grid-colum-gap
  > grid-row-gap
  > grid-gap
  > justify-items
  > align-items
  > place-items
  > justify-content
  > align-content
  > place-content
  > grid-auto-columns
  > grid-auto-rows
  > grid-auto-flow
  > grid

# Properties of Grid Items (Children)
  > grid-column-start
  > grid-column-end
  > grid-row-start
  > grid-row-end
  > grid-column
  > grid-row
  > grid-area
  > justify-self
  > align-self
  > place-self
